name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Build packages
        run: pnpm build

      - name: Test build artifacts
        run: |
          # Verify build outputs exist
          test -f packages/shared/dist/index.js
          test -f packages/shared/dist/index.d.ts
          test -f packages/server/dist/index.js
          test -f packages/server/dist/app.js

  # Optional: Add a job to test the server starts correctly
  integration:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Start server in background
        run: |
          cd packages/server
          timeout 30s node dist/index.js &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          
          # Wait for server to start
          sleep 5
          
          # Test server is responding
          curl -f http://localhost:8080/health || exit 1
          curl -f http://localhost:8080/stats || exit 1
          
          # Stop server
          kill $SERVER_PID || true

      - name: Test API endpoints
        run: |
          # Test basic endpoints are accessible
          timeout 30s node packages/server/dist/index.js &
          SERVER_PID=$!
          sleep 3
          
          # Test health endpoint
          response=$(curl -s http://localhost:8080/health)
          echo "Health response: $response"
          
          # Test stats endpoint
          response=$(curl -s http://localhost:8080/stats)
          echo "Stats response: $response"
          
          # Clean up
          kill $SERVER_PID || true
